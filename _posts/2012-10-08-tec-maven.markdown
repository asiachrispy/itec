---
layout: post
title: "一定有你不知道的mvn 命令"
tag: "tec"
comment: true
published: true
date: 2012-10-08
---

一定有你不知道的mvn 命令

```
常用命令： 
mvn -v 显示版本 
mvn help:effective-pom 看这个“有效的 (effective)”POM，它暴露了 Maven的默认设置 

mvn archetype:create -DgroupId=org.sonatype.mavenbook.ch03 -DartifactId=simple -DpackageName=org.sonatype.mavenbook 创建Maven的普通java项目，在命令行使用Maven Archetype 插件 
mvn dependency:resolve 打印出已解决依赖的列表 
mvn dependency:tree 打印整个依赖树 

mvn install -X 想要查看完整的依赖踪迹，包含那些因为冲突或者其它原因而被拒绝引入的构件，打开 Maven 的调试标记运行 
mvn install -Dmaven.test.skip=true 给任何目标添加maven.test.skip 属性就能跳过测试 
mvn test -Dmaven.test.failture.ignore=true 忽略测试失败
mvn install assembly:assembly 构建装配Maven Assembly 插件是一个用来创建你应用程序特有分发包的插件 

mvn jetty:run 调用 Jetty 插件的 Run 目标在 Jetty Servlet 容器中启动 web 应用 
mvn compile 编译你的项目 
mvn clean install 删除再编译 

```

```
$ mvn archetype:create -DgroupId=org.sonatype.mavenbook.ch04 \                                                  -DartifactId=simple-weather \                                                  -DpackageName=org.sonatype.mavenbook \                                                  -Dversion=1.0
                                                  
<project xmlns="http://maven.apache.org/POM/4.0.0"          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                      http://maven.apache.org/maven-v4_0_0.xsd">  <modelVersion>4.0.0</modelVersion>  <groupId>org.sonatype.mavenbook.ch04</groupId>  <artifactId>simple-weather</artifactId>  <packaging>jar</packaging>  <version>1.0</version>  <name>simple-weather2</name>  <url>http://maven.apache.org</url>  <dependencies>    <dependency>      <groupId>junit</groupId>      <artifactId>junit</artifactId>      <version>3.8.1</version>      <scope>test</scope>    </dependency>  </dependencies></project>

```


